{
	"info": {
		"_postman_id": "6ac399d4-791d-49c2-bc76-0baf70375615",
		"name": "SP3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21866640"
	},
	"item": [
		{
			"name": "Admin",
			"item": [
				{
					"name": "Create token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"token\", jsonData.access_token);\r",
									"\r",
									"// pm.test(\"Your test name\", function () {\r",
									"//     var jsonData = pm.response.json();\r",
									"//     pm.expect(jsonData.value).to.eql(100);\r",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer{{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "client_id",
									"value": "{{client id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{client secret}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/oauth/issueToken",
							"host": [
								"{{url}}"
							],
							"path": [
								"oauth",
								"issueToken"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"verify Login true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.login).to.eql(true);\r",
									"    pm.expect(jsonData.user.userName).to.eql(\"Admin\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer{{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{url}}/api/v1/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.globals.set(\"variable_key\", \"variable_value\");\r",
									"pm.test(\"data organization\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.id).to.eql(\"1\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{url}}/api/v1/organization",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"organization"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Attendance",
			"item": [
				{
					"name": "attendance Punch In",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"test punch in\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(\"Successfully Punched In\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "bearer({{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "{{employeid}}",
									"type": "text"
								},
								{
									"key": "timezone",
									"value": "Europe/London",
									"type": "text"
								},
								{
									"key": "note",
									"value": "in",
									"type": "text"
								},
								{
									"key": "datetime",
									"value": "2022-07-15 01:30",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/punch-in",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"punch-in"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{employeid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Attendance punch out",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"test punch out\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(\"Successfully Punched Out\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "{{url}}",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "{{employeid}}",
									"type": "text"
								},
								{
									"key": "timezone",
									"value": "Europe/London",
									"type": "text"
								},
								{
									"key": "note",
									"value": "out",
									"type": "text"
								},
								{
									"key": "datetime",
									"value": "2022-07-16 22:27",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/punch-out",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"punch-out"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{employeid}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "employee",
			"item": [
				{
					"name": "save Employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(\"Successfully Saved\");\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"idemploye\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "firstName",
									"value": "Rias",
									"type": "text"
								},
								{
									"key": "middleName",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "lastName",
									"value": "Chan",
									"type": "text"
								},
								{
									"key": "code",
									"value": "{{$randomInt}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "810"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Detail employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Detai Employee\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.firstName).to.eql(\"Rias\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "1",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{idemploye}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Employee Detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Update employee detail\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(\"Successfully Updated\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "{{idemploye}}",
									"type": "text"
								},
								{
									"key": "firstName",
									"value": "albedo",
									"type": "text",
									"disabled": true
								},
								{
									"key": "lastName",
									"value": "chan",
									"type": "text",
									"disabled": true
								},
								{
									"key": "code",
									"value": "020167",
									"type": "text",
									"disabled": true
								},
								{
									"key": "dob",
									"value": "2022-07-14",
									"type": "text"
								},
								{
									"key": "licenseNumber",
									"value": "",
									"type": "text"
								},
								{
									"key": "licenseNumberExpDate",
									"value": "2023-07-13",
									"type": "text"
								},
								{
									"key": "maritalStatus",
									"value": "Single",
									"type": "text"
								},
								{
									"key": "gender",
									"value": "",
									"type": "text"
								},
								{
									"key": "otherId",
									"value": "1313",
									"type": "text"
								},
								{
									"key": "nationality",
									"value": "Indonesian",
									"type": "text"
								},
								{
									"key": "middleName",
									"value": "gapake",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{idemploye}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "employee search",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);\r",
									"});\r",
									"\r",
									"pm.test(\"value check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data[0].firstName).to.eql(\"san\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "name",
								"value": "Nami",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/api/v1/employee/search",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "Employee Education",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(\"Successfully Saved\");\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"seqId\", jsonData.seqId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "id",
								"value": "{{employeid}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "level",
								"value": "1",
								"type": "text",
								"disabled": true
							},
							{
								"key": "seqId",
								"value": "1",
								"type": "text",
								"disabled": true
							},
							{
								"key": "institute",
								"value": "Budi Dharma",
								"type": "text",
								"disabled": true
							},
							{
								"key": "specialization",
								"value": "Engineering",
								"type": "text",
								"disabled": true
							},
							{
								"key": "year",
								"value": "2021",
								"type": "text",
								"disabled": true
							},
							{
								"key": "startDate",
								"value": "2016-05-16",
								"type": "text",
								"disabled": true
							},
							{
								"key": "endDate",
								"value": "2020-05-09",
								"type": "text",
								"disabled": true
							},
							{
								"key": "gpa",
								"value": "3.70",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "{{idemploye}}",
									"type": "text"
								},
								{
									"key": "level",
									"value": "1",
									"type": "text"
								},
								{
									"key": "seqId",
									"value": "1",
									"type": "text",
									"disabled": true
								},
								{
									"key": "institute",
									"value": "Budi Dharma",
									"type": "text"
								},
								{
									"key": "specialization",
									"value": "Engineering",
									"type": "text"
								},
								{
									"key": "year",
									"value": "2022",
									"type": "text"
								},
								{
									"key": "fromDate",
									"value": "2016-03-13",
									"type": "text"
								},
								{
									"key": "toDate",
									"value": "2020-05-16",
									"type": "text"
								},
								{
									"key": "gpa",
									"value": "3.70",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/education",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"education"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{idemploye}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Education Employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"employee education Put\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(\"Successfully Updated\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "id",
								"value": "{{employeid}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "level",
								"value": "1",
								"type": "text",
								"disabled": true
							},
							{
								"key": "seqId",
								"value": "24",
								"type": "text",
								"disabled": true
							},
							{
								"key": "institute",
								"value": "Institut Pertanian Budi Luhur",
								"type": "text",
								"disabled": true
							},
							{
								"key": "specialization",
								"value": "Quality Engineering",
								"type": "text",
								"disabled": true
							},
							{
								"key": "year",
								"value": "2022",
								"type": "text",
								"disabled": true
							},
							{
								"key": "fromDate",
								"value": "2016-03-13",
								"type": "text",
								"disabled": true
							},
							{
								"key": "toDate",
								"value": "2020-05-16",
								"type": "text",
								"disabled": true
							},
							{
								"key": "gpa",
								"value": "90",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "{{idemploye}}",
									"type": "text"
								},
								{
									"key": "level",
									"value": "1",
									"type": "text"
								},
								{
									"key": "seqId",
									"value": "{{seqId}}",
									"type": "text"
								},
								{
									"key": "institute",
									"value": "Institut Pertanian Budi Luhur",
									"type": "text"
								},
								{
									"key": "startDate",
									"value": "2016-07-15",
									"type": "text"
								},
								{
									"key": "endDateDate",
									"value": "2020-07-16",
									"type": "text"
								},
								{
									"key": "specialization",
									"value": "Quality engineer",
									"type": "text"
								},
								{
									"key": "year",
									"value": "2021",
									"type": "text"
								},
								{
									"key": "gpa",
									"value": "3.90",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/education",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"education"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{idemploye}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Employe education",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Value check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data[0].institute).to.eql(\"Institut Pertanian Budi Luhur\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "albedo gapake chan",
									"type": "text",
									"disabled": true
								},
								{
									"key": "code",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "status",
									"value": "Single",
									"type": "text",
									"disabled": true
								},
								{
									"key": "supervisor",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "jobTitleoptional",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "unit",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "dob",
									"value": "2022-07-14",
									"type": "text",
									"disabled": true
								},
								{
									"key": "include",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/education",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"education"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{idemploye}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Employe Education",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"delete employee education\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(\"Successfully Deleted\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "{{idemploye}}",
									"type": "text"
								},
								{
									"key": "seqId",
									"value": "{{seqId}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/education",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"education"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{idemploye}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "employee work experience",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(\"Successfully Saved\");\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"seqId Work ex\", jsonData.seqId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "{{idemploye}}",
									"type": "text"
								},
								{
									"key": "company",
									"value": "Aniline pvt ltd",
									"type": "text"
								},
								{
									"key": "title",
									"value": "Engineering ",
									"type": "text"
								},
								{
									"key": "fromDate",
									"value": "2006-12-30",
									"type": "text"
								},
								{
									"key": "toDate",
									"value": "2012-12-30",
									"type": "text"
								},
								{
									"key": "comment",
									"value": "sample comment",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/work-experience",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"work-experience"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{idemploye}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Employe Work exprerince",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Employee work experience\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(\"Successfully Updated\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "{{idemploye}}",
									"type": "text"
								},
								{
									"key": "company",
									"value": "PT Pencari cinta sejati",
									"type": "text"
								},
								{
									"key": "seqId",
									"value": "{{seqId Work ex}}",
									"type": "text"
								},
								{
									"key": "company",
									"value": "PT Pencari cinta sejati",
									"type": "text"
								},
								{
									"key": "title",
									"value": "QA Automation",
									"type": "text"
								},
								{
									"key": "fromDate",
									"value": "2014-12-30",
									"type": "text"
								},
								{
									"key": "toDate",
									"value": "2017-12-30",
									"type": "text"
								},
								{
									"key": "comment",
									"value": "semoga bisa",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/work-experience",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"work-experience"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{idemploye}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Employee experience",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data[0].id).to.eql(\"1\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/work-experience",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"work-experience"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{idemploye}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Employee experience ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(\"Successfully Deleted\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "id",
								"value": "{{employeid}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "seqId",
								"value": "1",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "{{idemploye}}",
									"type": "text"
								},
								{
									"key": "seqId",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/work-experience",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"work-experience"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{idemploye}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Contact Detail Employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(\"Successfully Saved\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "{{idemploye}}",
									"type": "text"
								},
								{
									"key": "addressStreet1",
									"value": "No 30 Buyur street ,Devmore canada",
									"type": "text"
								},
								{
									"key": "addressStreet2",
									"value": "No 10 Sungai view Devmore",
									"type": "text"
								},
								{
									"key": "city",
									"value": "Kuningan",
									"type": "text"
								},
								{
									"key": "state",
									"value": "West",
									"type": "text"
								},
								{
									"key": "zip",
									"value": "46669",
									"type": "text"
								},
								{
									"key": "country\t",
									"value": "Indonesian",
									"type": "text"
								},
								{
									"key": "homeTelephone",
									"value": "1234567890",
									"type": "text"
								},
								{
									"key": "mobile",
									"value": "1234567890",
									"type": "text"
								},
								{
									"key": "workTelephone",
									"value": "08912345678",
									"type": "text"
								},
								{
									"key": "workEmail",
									"value": "{{$randomEmail}}",
									"type": "text"
								},
								{
									"key": "otherEmail",
									"value": "{{$randomEmail}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/contact-detail",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"contact-detail"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{idemploye}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Contact Detail Employee Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(\"Successfully Updated\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "{{idemploye}}",
									"type": "text"
								},
								{
									"key": "addressStreet1",
									"value": "Jl Marga TZ no 14 Canada",
									"type": "text"
								},
								{
									"key": "addressStreet2",
									"value": "No 10 Sungai view Devmore",
									"type": "text"
								},
								{
									"key": "city",
									"value": "Kuningan",
									"type": "text"
								},
								{
									"key": "state",
									"value": "West",
									"type": "text"
								},
								{
									"key": "zip",
									"value": "46669",
									"type": "text"
								},
								{
									"key": "country\t",
									"value": "Indonesian",
									"type": "text"
								},
								{
									"key": "homeTelephone",
									"value": "1234567890",
									"type": "text"
								},
								{
									"key": "mobile",
									"value": "1234567890",
									"type": "text"
								},
								{
									"key": "workTelephone",
									"value": "08912345678",
									"type": "text"
								},
								{
									"key": "workEmail",
									"value": "{{$randomEmail}}",
									"type": "text"
								},
								{
									"key": "otherEmail",
									"value": "{{$randomEmail}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/contact-detail",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"contact-detail"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{idemploye}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Contact Detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.fullName).to.eql(\"Rias Chan\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/contact-detail",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"contact-detail"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{idemploye}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Employee Dependants",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(\"Successfully Saved\");\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"sequenceNumber\", jsonData.sequenceNumber);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "{{idemploye}}",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Rias Chan",
									"type": "text"
								},
								{
									"key": "relationship",
									"value": "Girlfiriend",
									"type": "text"
								},
								{
									"key": "dob",
									"value": "1998-09-02",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/dependent",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"dependent"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{idemploye}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Employee dependants",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(\"Successfully Updated\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "{{idemploye}}",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Akeno Chan",
									"type": "text"
								},
								{
									"key": "relationship",
									"value": "Girlfiriend two",
									"type": "text"
								},
								{
									"key": "dob\t",
									"value": "1997-02-06",
									"type": "text"
								},
								{
									"key": "sequenceNumber",
									"value": "{{sequenceNumber}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/dependent",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"dependent"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{idemploye}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Employee dependents",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data[0].name).to.eql(\"Akeno Chan\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "{{employeid}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/dependent",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"dependent"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{idemploye}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Employee dependants",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(\"Successfully Deleted\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "sequenceNumber",
									"value": "{{sequenceNumber}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/dependent",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"dependent"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{idemploye}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Employee Jobs detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(\"Successfully Saved\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "id",
								"value": "{{employeid}}",
								"type": "text"
							},
							{
								"key": "title",
								"value": "1",
								"type": "text"
							},
							{
								"key": "category",
								"value": "3",
								"type": "text"
							},
							{
								"key": "status",
								"value": "1",
								"type": "text"
							},
							{
								"key": "subunit",
								"value": "2020-05-16",
								"type": "text"
							},
							{
								"key": "location",
								"value": "1",
								"type": "text"
							},
							{
								"key": "joinedDate",
								"value": "2001-01-12",
								"type": "text"
							},
							{
								"key": "startDate",
								"value": "2001-02-01",
								"type": "text"
							},
							{
								"key": "endDate",
								"value": "2005-02-01",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "{{idemploye}}",
									"type": "text"
								},
								{
									"key": "title",
									"value": "1",
									"type": "text"
								},
								{
									"key": "category",
									"value": "3",
									"type": "text"
								},
								{
									"key": "status",
									"value": "1",
									"type": "text"
								},
								{
									"key": "subunit",
									"value": "1",
									"type": "text"
								},
								{
									"key": "location",
									"value": "",
									"type": "text"
								},
								{
									"key": "joinedDate",
									"value": "2001-01-12",
									"type": "text"
								},
								{
									"key": "startDate",
									"value": "2001-01-13",
									"type": "text"
								},
								{
									"key": "endDate",
									"value": "2005-01-12",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/job-detail",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"job-detail"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{idemploye}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Jobs detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(\"Successfully Saved\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "{{idemploye}}",
									"type": "text"
								},
								{
									"key": "title",
									"value": "3",
									"type": "text"
								},
								{
									"key": "category",
									"value": "2",
									"type": "text"
								},
								{
									"key": "status",
									"value": "1",
									"type": "text"
								},
								{
									"key": "subunit",
									"value": "1",
									"type": "text"
								},
								{
									"key": "location",
									"value": "",
									"type": "text"
								},
								{
									"key": "joinedDate",
									"value": "2001-01-12",
									"type": "text"
								},
								{
									"key": "startDate",
									"value": "2001-01-14",
									"type": "text"
								},
								{
									"key": "endDate",
									"value": "2014-01-12",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/job-detail",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"job-detail"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{idemploye}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "employee job detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.title).to.eql(\"Chief Executive Office\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "id",
								"value": "676",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "{{idemploye}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/job-detail",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"job-detail"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{idemploye}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Save detail supervisor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(\"Successfully Saved\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "id",
								"value": "{{employeid}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "supervisorId",
								"value": "1",
								"type": "text",
								"disabled": true
							},
							{
								"key": "reportingMethod",
								"value": "Direct",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "{{idemploye}}",
									"type": "text"
								},
								{
									"key": "supervisorId",
									"value": "1",
									"type": "text"
								},
								{
									"key": "reportingMethod",
									"value": "Permission to join your nakama",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/supervisor",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"supervisor"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{idemploye}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Supervisor ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data[0].name).to.eql(\"albedo gapake chan (Past Employee)\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/supervisor",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"supervisor"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{idemploye}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update supervisor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(\"Successfully Updated\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "{{idemploye}}",
									"type": "text"
								},
								{
									"key": "supervisorId",
									"value": "1",
									"type": "text"
								},
								{
									"key": "reportingMethod",
									"value": "can i",
									"type": "text"
								},
								{
									"key": "",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/supervisor",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"supervisor"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{idemploye}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete supervisor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(\"Successfully Deleted\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "supervisorId",
									"value": "1",
									"type": "text"
								},
								{
									"key": "reportingMethod",
									"value": "can i",
									"type": "text"
								},
								{
									"key": "id",
									"value": "{{idemploye}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/supervisor",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"supervisor"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{idemploye}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "negative tc",
			"item": [
				{
					"name": "Login with wrong data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 202\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});\r",
									"\r",
									"pm.test(\"verify Login true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error.status).to.eql(\"202\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer{{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "test",
									"type": "text"
								},
								{
									"key": "password",
									"value": "yuhu",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "attendance Punch In wrong timezone",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response time is less than 202ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(202);\r",
									"});\r",
									"\r",
									"pm.test(\"test punch in\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error.text).to.eql(\"Invalid Time Zone\");\r",
									"    pm.expect(jsonData.error.status).to.eql(\"202\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "bearer({{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "{{employeid}}",
									"type": "text"
								},
								{
									"key": "timezone",
									"value": "Europe/Londo",
									"type": "text"
								},
								{
									"key": "note",
									"value": "in",
									"type": "text"
								},
								{
									"key": "datetime",
									"value": "2022-07-15 01:30",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/punch-in",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"punch-in"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{employeid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Attendance punch out wrong datetime",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 202\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});\r",
									"\r",
									"pm.test(\"test punch out\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error.status).to.eql(\"202\");\r",
									"    pm.expect(jsonData.error.text).to.eql(\"datetime must be a valid date. Sample format: \\\"2005-12-30 01:02\\\"\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "{{url}}",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "{{employeid}}",
									"type": "text"
								},
								{
									"key": "timezone",
									"value": "Europe/London",
									"type": "text"
								},
								{
									"key": "note",
									"value": "out",
									"type": "text"
								},
								{
									"key": "datetime",
									"value": " 22:27",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/employee/:id/punch-out",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"employee",
								":id",
								"punch-out"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{employeid}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://qa.cilsy.id/symfony/web/index.php",
			"type": "string"
		},
		{
			"key": "token",
			"value": "c8068089eac935713815aa807d6d3dbb6cf18b45",
			"type": "string"
		},
		{
			"key": "baseurl",
			"value": "http://qa.cilsy.id/symfony/web/index.php/auth/login",
			"type": "string"
		},
		{
			"key": "client id",
			"value": "bagas008",
			"type": "string"
		},
		{
			"key": "client secret",
			"value": "jojo008",
			"type": "string"
		},
		{
			"key": "username",
			"value": "Admin",
			"type": "string"
		},
		{
			"key": "password",
			"value": "s3Kol4HQA!*",
			"type": "string"
		},
		{
			"key": "firstName",
			"value": "Albedo",
			"type": "string"
		},
		{
			"key": "lastName",
			"value": "chan",
			"type": "string"
		},
		{
			"key": "employeid",
			"value": "842",
			"type": "string"
		},
		{
			"key": "seqId",
			"value": ""
		},
		{
			"key": "seqId Work ex",
			"value": ""
		},
		{
			"key": "sequenceNumber",
			"value": ""
		},
		{
			"key": "idemploye",
			"value": ""
		}
	]
}